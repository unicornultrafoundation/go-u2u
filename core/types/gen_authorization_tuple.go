// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"
	"errors"
	"math/big"

	"github.com/unicornultrafoundation/go-u2u/common"
)

// MarshalJSON marshals as JSON.
func (a AuthorizationTuple) MarshalJSON() ([]byte, error) {
	type AuthorizationTuple struct {
		ChainID *big.Int       `json:"chainId"   gencodec:"required"`
		Address common.Address `json:"address"   gencodec:"required"`
		Nonce   uint64         `json:"nonce"     gencodec:"required"`
		V       *big.Int       `json:"v"         gencodec:"required"`
		R       *big.Int       `json:"r"         gencodec:"required"`
		S       *big.Int       `json:"s"         gencodec:"required"`
	}
	var enc AuthorizationTuple
	enc.ChainID = a.ChainID
	enc.Address = a.Address
	enc.Nonce = a.Nonce
	enc.V = a.V
	enc.R = a.R
	enc.S = a.S
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (a *AuthorizationTuple) UnmarshalJSON(input []byte) error {
	type AuthorizationTuple struct {
		ChainID *big.Int        `json:"chainId"   gencodec:"required"`
		Address *common.Address `json:"address"   gencodec:"required"`
		Nonce   *uint64         `json:"nonce"     gencodec:"required"`
		V       *big.Int        `json:"v"         gencodec:"required"`
		R       *big.Int        `json:"r"         gencodec:"required"`
		S       *big.Int        `json:"s"         gencodec:"required"`
	}
	var dec AuthorizationTuple
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.ChainID == nil {
		return errors.New("missing required field 'chainId' for AuthorizationTuple")
	}
	a.ChainID = dec.ChainID
	if dec.Address == nil {
		return errors.New("missing required field 'address' for AuthorizationTuple")
	}
	a.Address = *dec.Address
	if dec.Nonce == nil {
		return errors.New("missing required field 'nonce' for AuthorizationTuple")
	}
	a.Nonce = *dec.Nonce
	if dec.V == nil {
		return errors.New("missing required field 'v' for AuthorizationTuple")
	}
	a.V = dec.V
	if dec.R == nil {
		return errors.New("missing required field 'r' for AuthorizationTuple")
	}
	a.R = dec.R
	if dec.S == nil {
		return errors.New("missing required field 's' for AuthorizationTuple")
	}
	a.S = dec.S
	return nil
}
